macro(generate_sources_for_autotools)
    set(@PROJECT_NAME@_SOURCES_TMP @@PROJECT_NAME@_SOURCES@)
    foreach(@PROJECT_NAME@_SOURCE ${@PROJECT_NAME@_SOURCES_TMP})
        string(CONCAT @PROJECT_NAME@_SOURCES_AUTOTOOLS ${@PROJECT_NAME@_SOURCES_AUTOTOOLS} " " ${@PROJECT_NAME@_SOURCE})
    endforeach()
endmacro()

macro(generate_public_headers_for_autotools)
    set(@PROJECT_NAME@_PUBLIC_HEADERS_DIRECTORIES_TMP @@PROJECT_NAME@_PUBLIC_HEADERS_DIRECTORIES@)
    foreach(directory ${@PROJECT_NAME@_PUBLIC_HEADERS_DIRECTORIES_TMP})
        file(GLOB_RECURSE @PROJECT_NAME@_PUBLIC_HEADERS_TMP RELATIVE ${directory} ${directory}/*.h)
        foreach(@PROJECT_NAME@_PUBLIC_HEADER ${@PROJECT_NAME@_PUBLIC_HEADERS_TMP})
            string(CONCAT @PROJECT_NAME@_PUBLIC_HEADERS_AUTOTOOLS ${@PROJECT_NAME@_PUBLIC_HEADERS_AUTOTOOLS} " " ${@PROJECT_NAME@_PUBLIC_HEADER})
        endforeach()
    endforeach()

    set(@PROJECT_NAME@_PUBLIC_HEADERS_FILES_TMP @@PROJECT_NAME@_PUBLIC_HEADERS_FILES@)
    foreach(file ${@PROJECT_NAME@_PUBLIC_HEADERS_FILES_TMP})
        string(CONCAT @PROJECT_NAME@_PUBLIC_HEADERS_AUTOTOOLS ${@PROJECT_NAME@_PUBLIC_HEADERS_AUTOTOOLS} " " ${file})
    endforeach()
endmacro()

