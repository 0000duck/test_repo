/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * fastcdr_LICENSE file included in this fastcdr distribution.
 *
 *************************************************************************
 * 
 * @file FilteringExamplePubSubMain.cpp
 * This file acts as a main entry point to the application.
 *
 * This file was generated by the tool fastcdrgen.
 */


#include "FilteringExamplePublisher.h"
#include "FilteringExampleSubscriber.h"


#include <fastrtps/Domain.h>
#include <fastrtps/utils/RTPSLog.h>

using namespace eprosima;
using namespace eprosima::fastrtps;

int main(int argc, char** argv)
{
	Log::setVerbosity(VERB_ERROR);
	cout << "Starting " << endl;
	int type = 1;
	int subscriberType = 1;
	if (argc > 1)
	{
		if (strcmp(argv[1], "publisher") == 0)
		{
			type = 1;
		}
		else if (strcmp(argv[1], "subscriber") == 0)
		{
			type = 2;
		}
	}
	else
	{
		cout << "publisher OR subscriber argument needed" << endl;
		return 0;
	}


	if (type == 2) // get the subscriber type (fast or slow)
	{
		if (argc > 2) {
			if (strcmp(argv[2], "fast") == 0)
			{
				subscriberType = 1;
			}
			else if (strcmp(argv[2], "slow") == 0)
			{
				subscriberType = 2;
			}
		}
		else
		{
			cout << "subscriber type argument needed (fast or slow)" << endl;
			return 0;
		}
	}

	// Register the type being used
	
	
	switch(type)
	{
		case 1:
		{
			FilteringExamplePublisher mypub;
			if (mypub.init())
			{
				mypub.run();
			}
			break;
		}
		case 2:
		{
			FilteringExampleSubscriber mysub;
			if (mysub.init(subscriberType))
			{
				mysub.run();
			}
			break;
		}
	}
	
	return 0;
}
