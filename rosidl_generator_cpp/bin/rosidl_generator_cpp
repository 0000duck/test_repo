#!/usr/bin/env python3

import argparse
import os
import sys


def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(
        description='Generate the C++ ROS interfaces.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        '--pkg-name',
        required=True,
        help='The package name to generate interfaces for')
    parser.add_argument(
        '--interface-files',
        nargs='*',
        help='The interface files')
    parser.add_argument(
        '--deps',
        nargs='*',
        help="The dependencies (each as '<pkgname>:<abs_interface_file>')")
    parser.add_argument(
        '--output-dir',
        required=True,
        help='The location of the generated files')
    parser.add_argument(
        '--template-dir',
        required=True,
        help='The location of the template files')
    args = parser.parse_args(argv)

    try:
        os.makedirs(args.output_dir)
    except FileExistsError:
        pass

    for idl_file in args.interface_files:
        basename = os.path.basename(idl_file)
        assert(basename.endswith('.msg'))
        generated_file = os.path.join(args.output_dir, basename[:-4] + '.h')
        print('Generating: %s' % generated_file)
        with open(generated_file, 'w') as h:
            h.write('')

    return 0


if __name__ == '__main__':
    sys.exit(main())
