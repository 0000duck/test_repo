// generated from rosidl_typesupport_connext_cpp/resource/msg_TypeSupport.h.template

@#######################################################################
@# EmPy template for generating <msg>_TypeSupport.h files
@#
@# Context:
@#  - spec (rosidl_parser.MessageSpecification)
@#    Parsed specification of the .msg file
@#######################################################################
@
#ifndef __@(spec.base_type.pkg_name)__dds_connext__@(spec.base_type.type)_TypeSupport__h__
#define __@(spec.base_type.pkg_name)__dds_connext__@(spec.base_type.type)_TypeSupport__h__

#include <rosidl_typesupport_connext_cpp/visibility_control.h>

#include "@(spec.base_type.pkg_name)/@(spec.base_type.type)_Struct.h"
#include "@(spec.base_type.pkg_name)/dds_connext/@(spec.base_type.type)_Support.h"

// forward declaration of DDS types
class DDSDomainParticipant;
class DDSDataWriter;
class DDSDataReader;

namespace @(spec.base_type.pkg_name)
{

namespace type_support
{

void
register_type__@(spec.base_type.type)(
  DDSDomainParticipant * participant,
  const char * type_name);

void
ROSIDL_TYPESUPPORT_CONNEXT_CPP_PUBLIC
convert_ros_message_to_dds(
  const @(spec.base_type.pkg_name)::@(spec.base_type.type) & ros_message,
  @(spec.base_type.pkg_name)::dds_::@(spec.base_type.type)_ & dds_message);

void
publish__@(spec.base_type.type)(
  DDSDataWriter * topic_writer,
  const void * untyped_ros_message);

void
ROSIDL_TYPESUPPORT_CONNEXT_CPP_PUBLIC
convert_dds_message_to_ros(
  const @(spec.base_type.pkg_name)::dds_::@(spec.base_type.type)_ & dds_message,
  @(spec.base_type.pkg_name)::@(spec.base_type.type) & ros_message);

bool
take__@(spec.base_type.type)(
  DDSDataReader * topic_reader,
  void * untyped_ros_message);

}  // namespace type_support

}  // namespace @(spec.base_type.pkg_name)

#endif  // __@(spec.base_type.pkg_name)__dds_connext__@(spec.base_type.type)_TypeSupport__h__
