@###############################################
@#
@# ROS service type support code generation for C++
@#
@# EmPy template for generating <msg>_ServiceTypeSupport.cpp files
@#
@###############################################
@# Start of Template
@#
@# Context:
@#  - spec (rosidl_parser.ServiceSpecification)
@#    Parsed specification of the .srv file
@###############################################
// This file was generated from:
//   rosidl_typesupport_opensplice_cpp/srv_ServiceTypeSupport.cpp.template
#include <iostream>

#include <rosidl_generator_c/service_type_support.h>
#include <rosidl_generator_c/visibility_control.h>
// This is defined in the rosidl_typesupport_opensplice_cpp package and
// is in the include/rosidl_typesupport_opensplice_cpp/impl folder.
#include <rosidl_generator_cpp/service_type_support.hpp>

#include "@(spec.pkg_name)/@(spec.srv_name)_Service.h"
#include "rosidl_typesupport_opensplice_cpp/service_type_support.h"

namespace DDS
{
class DomainParticipant;
class DataReader;
class DataWriter;
}  // namespace DDS

namespace @(spec.pkg_name)
{

namespace service_type_support
{

static service_type_support_callbacks_t callbacks = {
    "@(spec.pkg_name)",
    "@(spec.srv_name)",
};

static rosidl_service_type_support_t handle = {
    "opensplice_static",
    &callbacks
};

}  // namespace service_type_support

}  // namespace @(spec.pkg_name)


namespace rosidl_typesupport_opensplice_cpp
{

template<>
ROSIDL_EXPORT
const rosidl_service_type_support_t *
get_service_type_support_handle_opensplice<@(spec.pkg_name)::@(spec.srv_name)>()
{
    return &@(spec.pkg_name)::service_type_support::handle;
}

}  // namespace rosidl_typesupport_opensplice_cpp
