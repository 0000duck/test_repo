BASEDIR=.
OUTDIR= $(BASEDIR)/output
CC=gcc
CPP=g++
LN=g++
AR=ar
CP=cp

-include $(EPROSIMADIR)/building/makefiles/eProsima.mk

ABASTRACTDATATYPESTEST_OUTDIR= $(OUTDIR)/AbstractDataTypesTest
ABASTRACTDATATYPESTEST_OUTDIR_DEBUG = $(ABASTRACTDATATYPESTEST_OUTDIR)/debug
ABASTRACTDATATYPESTEST_OUTDIR_RELEASE = $(ABASTRACTDATATYPESTEST_OUTDIR)/release

ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_DEBUG= $(subst /,\\/,$(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG))
ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_RELEASE= $(subst /,\\/,$(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE))

ABASTRACTDATATYPESTEST_CFLAGS = $(CFLAGS) -std=c++0x
ABASTRACTDATATYPESTEST_CFLAGS_DEBUG = $(CFLAGS_DEBUG) -std=c++0x

ABASTRACTDATATYPESTEST_TARGET_DEBUG= $(BASEDIR)/bin/$(EPROSIMA_TARGET)/AbstractDataTypesTestd
ABASTRACTDATATYPESTEST_TARGET= $(BASEDIR)/bin/$(EPROSIMA_TARGET)/AbstractDataTypesTest

ABASTRACTDATATYPESTEST_INCLUDE_DIRS= $(INCLUDE_DIRS) -I$(BASEDIR)/../../../include

ABASTRACTDATATYPESTEST_LIBS_DEBUG= $(LIBS_DEBUG) -L$(BASEDIR)/../../../lib/$(EPROSIMA_TARGET) -lcdrd
ABASTRACTDATATYPESTEST_LIBS_RELEASE= $(LIBS) -L$(BASEDIR)/../../../lib/$(EPROSIMA_TARGET) -lcdr

ABASTRACTDATATYPESTEST_SRC_CFILES=

ABASTRACTDATATYPESTEST_SRC_CPPFILES= $(BASEDIR)/AbstractDataTypes.cpp

# Project sources are copied to the current directory
ABASTRACTDATATYPESTEST_SRCS= $(ABASTRACTDATATYPESTEST_SRC_CFILES) $(ABASTRACTDATATYPESTEST_SRC_CPPFILES)

# Source directories
ABASTRACTDATATYPESTEST_SOURCES_DIRS_AUX= $(foreach srcdir, $(dir $(ABASTRACTDATATYPESTEST_SRCS)), $(srcdir))
ABASTRACTDATATYPESTEST_SOURCES_DIRS= $(shell echo $(ABASTRACTDATATYPESTEST_SOURCES_DIRS_AUX) | tr " " "\n" | sort | uniq | tr "\n" " ")

ABASTRACTDATATYPESTEST_OBJS_DEBUG = $(foreach obj,$(notdir $(addsuffix .o, $(ABASTRACTDATATYPESTEST_SRCS))), $(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)/$(obj))
ABASTRACTDATATYPESTEST_DEPS_DEBUG = $(foreach dep,$(notdir $(addsuffix .d, $(ABASTRACTDATATYPESTEST_SRCS))), $(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)/$(dep))
ABASTRACTDATATYPESTEST_OBJS_RELEASE = $(foreach obj,$(notdir $(addsuffix .o, $(ABASTRACTDATATYPESTEST_SRCS))), $(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)/$(obj))
ABASTRACTDATATYPESTEST_DEPS_RELEASE = $(foreach dep,$(notdir $(addsuffix .d, $(ABASTRACTDATATYPESTEST_SRCS))), $(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)/$(dep))

OBJS+= $(ABASTRACTDATATYPESTEST_OBJS_DEBUG) $(ABASTRACTDATATYPESTEST_OBJS_RELEASE)
DEPS+= $(ABASTRACTDATATYPESTEST_DEPS_DEBUG) $(ABASTRACTDATATYPESTEST_DEPS_RELEASE)

.PHONY: AbstractDataTypesTest checkAbstractDataTypesTestDirectories

AbstractDataTypesTest: checkAbstractDataTypesTestDirectories $(ABASTRACTDATATYPESTEST_TARGET_DEBUG) $(ABASTRACTDATATYPESTEST_TARGET)

checkAbstractDataTypesTestDirectories:
	@mkdir -p $(OUTDIR)
	@mkdir -p $(ABASTRACTDATATYPESTEST_OUTDIR)
	@mkdir -p $(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)
	@mkdir -p $(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)
	@mkdir -p $(BASEDIR)/bin
	@mkdir -p $(BASEDIR)/bin/$(EPROSIMA_TARGET)

$(ABASTRACTDATATYPESTEST_TARGET_DEBUG): $(ABASTRACTDATATYPESTEST_OBJS_DEBUG)
	$(LN) $(LDFLAGS) -o $(ABASTRACTDATATYPESTEST_TARGET_DEBUG) $(LIBRARY_PATH) $(ABASTRACTDATATYPESTEST_LIBS_DEBUG) $(ABASTRACTDATATYPESTEST_OBJS_DEBUG) $(ABASTRACTDATATYPESTEST_STATIC_LIBS)

$(ABASTRACTDATATYPESTEST_TARGET): $(ABASTRACTDATATYPESTEST_OBJS_RELEASE)
	$(LN) $(LDFLAGS) -o $(ABASTRACTDATATYPESTEST_TARGET) $(LIBRARY_PATH) $(ABASTRACTDATATYPESTEST_LIBS_RELEASE) $(ABASTRACTDATATYPESTEST_OBJS_RELEASE) $(ABASTRACTDATATYPESTEST_STATIC_LIBS)

vpath %.c $(ABASTRACTDATATYPESTEST_SOURCES_DIRS)
vpath %.cpp $(ABASTRACTDATATYPESTEST_SOURCES_DIRS)

$(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)/%.o:%.c
	@echo Calculating dependencies \(DEBUG mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) -MM $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_DEBUG)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(DEBUG mode\) $<  
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

$(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)/%.o:%.c
	@echo Calculating dependencies \(RELEASE mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS) -MM $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_RELEASE)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(RELEASE mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

$(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)/%.c.o:%.c
	@echo Calculating dependencies \(DEBUG mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) -MM $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_DEBUG)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(DEBUG mode\) $<  
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

$(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)/%.c.o:%.c
	@echo Calculating dependencies \(RELEASE mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS) -MM $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_RELEASE)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(RELEASE mode\) $<
	@$(CC) $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

$(ABASTRACTDATATYPESTEST_OUTDIR_DEBUG)/%.cpp.o:%.cpp
	@echo Calculating dependencies \(DEBUG mode\) $<
	@$(CPP) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) -MM $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_DEBUG)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(DEBUG mode\) $<
	@$(CPP) $(ABASTRACTDATATYPESTEST_CFLAGS_DEBUG) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

$(ABASTRACTDATATYPESTEST_OUTDIR_RELEASE)/%.cpp.o:%.cpp
	@echo Calculating dependencies \(RELEASE mode\) $<
	@$(CPP) $(ABASTRACTDATATYPESTEST_CFLAGS) -MM $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< | sed "s/^.*:/$(ABASTRACTDATATYPESTEST_SED_OUTPUT_DIR_RELEASE)\/&/g" > $(@:%.o=%.d)
	@echo Compiling \(RELEASE mode\) $<
	@$(CPP) $(ABASTRACTDATATYPESTEST_CFLAGS) $(ABASTRACTDATATYPESTEST_INCLUDE_DIRS) $< -o $@

.PHONY: all

all: AbstractDataTypesTest

clean:
	@rm -f $(OBJS)
	@rm -f $(DEPS)

ifneq ($(MAKECMDGOALS), clean)
-include $(DEPS)
endif
